#ifndef _OAL_WIFISETUP_H_
#define _OAL_WIFISETUP_H_

#include "oal_type.h"
#include "oal_event.h"

/////////////////////////////////////////////////////////////////////////////
// Airkiss apis
/////////////////////////////////////////////////////////////////////////////
OAL_RESULT OAL_AirKissStart(OAL_EVENT_CALLBACK pf, char *aesKey);
void OAL_AirKissExit();


/////////////////////////////////////////////////////////////////////////////
// Airkiss deciveDiscovery
/////////////////////////////////////////////////////////////////////////////
OAL_RESULT OAL_AirKissDeviceDiscoveryStart(OAL_EVENT_CALLBACK pf, char *device_id, char *device_type);
void OAL_AirKissDeviceDiscoveryExit();

/////////////////////////////////////////////////////////////////////////////
// UAP apis
/////////////////////////////////////////////////////////////////////////////
typedef struct {
	char *ssid;
	char *password;
	char *hostname;
}OAL_UAP_CONFIG;

OAL_RESULT OAL_UAPStart(OAL_EVENT_CALLBACK pf, OAL_UAP_CONFIG cfg);
void OAL_UAPExit();

/////////////////////////////////////////////////////////////////////////////
// Normal wifi connect apis
/////////////////////////////////////////////////////////////////////////////
OAL_RESULT OAL_NormalConnectStart(OAL_EVENT_CALLBACK pf);

/////////////////////////////////////////////////////////////////////////////
// wifi config apis
/////////////////////////////////////////////////////////////////////////////
void OAL_ReconfigWifiConnectionAndReboot();
void OAL_Reboot();

#endif
